[{"/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/index.js":"1","/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/App.js":"2","/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/components/Pokemon.js":"3","/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/screens/PokedexScreen.js":"4","/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/screens/HomeScreen.js":"5","/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/components/PokedexList.js":"6","/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/components/PokedexSinglePokemon.js":"7","/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/screens/SinglePokemonScreen.js":"8","/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/components/LodingScreen.js":"9"},{"size":220,"mtime":1625988930350,"results":"10","hashOfConfig":"11"},{"size":692,"mtime":1626077896512,"results":"12","hashOfConfig":"11"},{"size":1911,"mtime":1626077689305,"results":"13","hashOfConfig":"11"},{"size":1570,"mtime":1626077412236,"results":"14","hashOfConfig":"11"},{"size":503,"mtime":1626041364511,"results":"15","hashOfConfig":"11"},{"size":2651,"mtime":1626077259358,"results":"16","hashOfConfig":"11"},{"size":3016,"mtime":1626075576134,"results":"17","hashOfConfig":"11"},{"size":4596,"mtime":1626078604149,"results":"18","hashOfConfig":"11"},{"size":360,"mtime":1626077551353,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1d6mqrq",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},"/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/index.js",[],["46","47"],"/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/App.js",["48"],"import React from \"react\";\nimport { BrowserRouter, Switch, Route, Link} from \"react-router-dom\";\nimport PokedexList from \"./components/PokedexList\";\nimport PokedexSinglePokemon from \"./components/PokedexSinglePokemon\";\nimport HomeScreen from './screens/HomeScreen';\n\n\nfunction App() {\n  \n  return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\">\n            <HomeScreen/>\n          </Route>\n          \n          <Route exact path=\"/pokedex\">\n            <PokedexList/>\n          </Route>\n          \n          <Route exact path=\"/pokemon/:id\">\n            <PokedexSinglePokemon/>\n          </Route>\n\n        </Switch>\n      </BrowserRouter>\n  )\n}\n\nexport default App;\n","/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/components/Pokemon.js",["49","50"],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport \"./Pokemon.css\"\n\nconst Pokemon = (props) => {\n  const [pokemon, setPokemon] = useState();\n  const [loading, setLoading] = useState(true);\n  const [types, setTypes] = useState();\n  const [abilities, setAbilities] = useState();\n  const [pokemonId, setPokemonId] = useState()\n\n  const fetchPokemon = async () => {\n    const url = props.url\n    const response = await fetch(url)\n    const data = await response.json()\n    setPokemon(data)\n    setTypes(data.types)\n    setAbilities(data.abilities)\n    setPokemonId(data.id)\n    setLoading(false)\n  }\n\n  useEffect(() => {\n    setLoading(true)\n    fetchPokemon()\n  }, [])\n\n  return (\n    <>\n      { loading ? <div className=\"loading-pokemon-row\">...Loading Pokemon...</div> : \n      \n      <Link className=\"link-pokemon\" to={`/pokemon/${pokemonId}`}>\n      <div className=\"pokemon-wrapper\">\n          <img className=\"small-pÃ³kemon-avatar\" src={pokemon.sprites.front_default}></img>\n          \n          <h1 className=\"pokemon-name\">{pokemon.name.toUpperCase()}</h1>\n          <div className=\"stats-div\">\n            <p className=\"pokemon-weight\">Id: {pokemon.id}</p>\n            <p className=\"pokemon-weight\">Weight: {pokemon.weight}</p>\n          </div>  \n        <div className=\"abilities-main-wrapper\">\n          <h4>Abilities</h4>\n          <div className=\"pokemon-abilities\">\n              {abilities.map((data, i) => {\n                return <p>{data.ability.name}</p>\n              })\n            }\n          </div>\n        </div>\n        <div className=\"types-main-wrapper\">\n        <h4>Types</h4>\n          <div className=\"pokemon-types\">\n              {types.map((data, i) => {\n              return <p>{data.type.name}</p>\n            })\n          }\n          </div>\n        </div>\n      </div>\n        </Link>\n      }\n    </>\n  )\n}\n\nexport default Pokemon\n","/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/screens/PokedexScreen.js",["51","52","53","54"],"import { computeHeadingLevel } from '@testing-library/dom';\nimport React, { useState, useEffect} from 'react'\nimport Pokemon from '../components/Pokemon'\nimport './styles.css'\nimport LoadingScreen from '../components/LodingScreen'\n\nfunction PokedexScreen(props) {\n\n  console.log('RUNNING');\n  const [loading, setLoading] = useState(true)\n  const [data, setData] = useState();\n  const [pokemonList, setPokemonList] = useState()\n  const [error, setError] = useState(false)\n  const { setPreviousUrl, setNextUrl } = props\n  \n  const fetchPokemons = async (url) =>  {\n    \n    try {\n      console.log(url, 'PROPS')\n      const response = await fetch(url);\n      const data = await response.json();\n      setData(data)\n      console.log('Data:', data)\n      setPreviousUrl(data.previous)\n      setNextUrl(data.next)\n      setPokemonList(data.results)\n      setLoading(false);\n    } catch {\n      setError('Could not retrive any data')\n      setLoading(false);\n      console.log('Error:', error)\n    }\n  }\n\n  useEffect( async() => {\n    setLoading(true)\n    const { url } = props\n    console.log('URL FROM USEFFECT', url)\n    await fetchPokemons(url)\n    \n  }, [props])\n\n  return (\n    <div className=\"main-background-screen\">\n      {loading ? <LoadingScreen/> : \n        <div className=\"main-list-wrapper\">\n          <div className=\"pokemon-list-wrapper\">\n            {pokemonList.map((pokemon) => {\n              return (<Pokemon name={pokemon.name} url={pokemon.url} />)\n            })}\n          </div>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default PokedexScreen\n","/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/screens/HomeScreen.js",["55"],"import React from 'react'\nimport { Link } from 'react-router-dom';\nimport PokemonLogo from '../assets/pokemonlogo.png'\nimport './HomeScreen.css'\n\nfunction HomeScreen() {\n  return (\n    <div className=\"background-homescreen\">\n      <h1 className=\"homescreen-title\">Welcome to the PokeDex App</h1>\n      <img className=\"pokemon-logo\" src={PokemonLogo}></img>\n\n      <Link to=\"/pokedex\">\n        <button className=\"big-start-button\">Start</button>\n      </Link>\n    </div>\n  )\n}\n\nexport default HomeScreen\n","/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/components/PokedexList.js",["56"],"import React, { useEffect, useState } from 'react'\nimport './Background.css'\nimport { Link, useHistory } from 'react-router-dom'\nimport './Pokedex.css'\nimport PokedexScreen from '../screens/PokedexScreen'\n \n\nconst PokedexList = () =>  {\n\n    const [previousUrl, setPreviousUrl] = useState(\"\")\n    const [nextUrl, setNextUrl] = useState(\"\")\n    const [url, setUrl] = useState(`https://pokeapi.co/api/v2/pokemon?offset=0&limit=20`)\n    const [pokemonNameInput, setPokemonNameInput] = useState(\"\")\n    const history = useHistory()\n\n\n    const handleChange = (event) => {\n        event.preventDefault()\n        const searchValue = event.target.value \n        setPokemonNameInput(searchValue)\n    }\n\n    const handleClick = async (pokemonName) => {\n        console.log(pokemonName)\n        const url = `https://pokeapi.co/api/v2/pokemon/${pokemonName}`\n        const response = await fetch(url)\n        const data = await response.json()\n        console.log(data.id);\n        if (data.id) {\n            history.push(`/pokemon/${data.id}`)\n        }\n\n\n    } \n\n\n    return (\n        <div className=\"main-background-pokedex\">\n            <div className=\"sixty-container\">\n                <div className=\"information-wrapper\">\n                    <PokedexScreen url={url} setNextUrl={setNextUrl} setPreviousUrl={setPreviousUrl}/>\n                </div>\n            </div>\n            <div className=\"forty-container\">\n                <div className=\"row-buttons-pokedex\">\n                    <Link>\n                        <button onClick={ () => setUrl(previousUrl)} className=\"previous-btn\">Previous</button>\n                    </Link>\n                    \n                        <button onClick={() => setUrl(nextUrl)} className=\"next-btn\">Next</button>\n                    \n                </div>\n                <div className=\"row-buttons-pokedex\">\n                    <Link to=\"/pokedex\">\n                        <button className=\"pokemon-list-btn\">PÃ³kemon List</button>\n                    </Link>\n                    <Link to=\"/\">\n                        <button className=\"turn-off-btn\">Turn Off</button>\n                    </Link>\n                </div>\n                <div className=\"row-buttons-pokedex\">\n                <div className=\"row-buttons-pokedex\">\n                    <input  className=\"pokemon-searchbar\" onChange={handleChange} placeholder=\"search pokemon by name or id number\"></input>\n                    <button className=\"pokemon-search-button\" onClick={() => handleClick(pokemonNameInput)}>Search</button>\n                </div>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default PokedexList\n","/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/components/PokedexSinglePokemon.js",["57","58"],"import React, { useEffect, useState } from 'react'\nimport './Background.css'\nimport SinglePokemonScreen from '../screens/SinglePokemonScreen'\nimport { Link, useParams, useHistory } from 'react-router-dom'\nimport './Pokedex.css'\nimport { findRenderedComponentWithType } from 'react-dom/test-utils'\n\nconst PokedexSinglePokemon = () =>  {\n\n    const [pokemonNameInput, setPokemonNameInput] = useState(\"\")\n    const history = useHistory()\n\n\n    const handleChange = (event) => {\n        event.preventDefault()\n        const searchValue = event.target.value \n        setPokemonNameInput(searchValue)\n    }\n\n    const handleClick = async (pokemonName) => {\n        console.log(pokemonName)\n        const url = `https://pokeapi.co/api/v2/pokemon/${pokemonName}`\n        const response = await fetch(url)\n        const data = await response.json()\n        console.log(data.id);\n        if (data.id) {\n            history.push(`/pokemon/${data.id}`)\n        }\n\n\n    } \n\n    const params = useParams()\n    const id = params.id\n    const idInt = parseInt(id);\n    \n    let nextId\n    if (idInt => 620) {\n        nextId = idInt + 1\n    } else {\n        nextId = 0\n    }\n\n    let previousId\n    if (idInt === 1) {\n        previousId = 620\n    } else {\n        previousId = idInt -1\n    }\n\n    return (\n        <div className=\"main-background-pokedex\">\n            <div className=\"sixty-container\">\n                <div className=\"information-wrapper\">\n                    <SinglePokemonScreen id={id} />\n                </div>\n            </div>\n            <div className=\"forty-container\">\n                <div className=\"row-buttons-pokedex\">\n                    <Link to={`/pokemon/${previousId}`}>\n                        <button \n                        // onClick={ () => setUrl(previousUrl)} \n                        className=\"previous-btn\">Previous</button>\n                    </Link >\n                    \n                    <Link to={`/pokemon/${nextId}`}>\n                        <button \n                        // onClick={() => setUrl(nextUrl)} \n                        className=\"next-btn\">Next\n                        </button>\n                    </Link>\n                    \n                    \n                </div>\n                <div className=\"row-buttons-pokedex\">\n                    <Link to=\"/pokedex\">\n                        <button className=\"pokemon-list-btn\">PÃ³kemon List</button>\n                    </Link>\n                    <Link to=\"/\">\n                        <button className=\"turn-off-btn\">Turn Off</button>\n                    </Link>\n                </div>\n                <div className=\"row-buttons-pokedex\">\n                    <input  className=\"pokemon-searchbar\" onChange={handleChange} placeholder=\"search pokemon by name or id number\"></input>\n                    <button className=\"pokemon-search-button\" onClick={() => handleClick(pokemonNameInput)}>Search</button>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default PokedexSinglePokemon","/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/screens/SinglePokemonScreen.js",["59","60","61","62","63","64"],"/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/components/LodingScreen.js",["65"],"import React from 'react'\nimport PokemonLogo from '../assets/pokemonlogo.png'\nimport './LoadingScreen.css'\n\nconst LoadingScreen = () => {\n    return (\n        <div className=\"loadingscreen-wrapper\">\n            <img className=\"loadingscreen-logo\" src={PokemonLogo}></img>\n            <h1>...Loading...</h1>\n        </div>\n    )\n}\n\nexport default LoadingScreen\n",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":2,"column":40,"nodeType":"72","messageId":"73","endLine":2,"endColumn":44},{"ruleId":"74","severity":1,"message":"75","line":26,"column":6,"nodeType":"76","endLine":26,"endColumn":8,"suggestions":"77"},{"ruleId":"78","severity":1,"message":"79","line":34,"column":11,"nodeType":"80","endLine":34,"endColumn":85},{"ruleId":"70","severity":1,"message":"81","line":1,"column":10,"nodeType":"72","messageId":"73","endLine":1,"endColumn":29},{"ruleId":"70","severity":1,"message":"82","line":11,"column":10,"nodeType":"72","messageId":"73","endLine":11,"endColumn":14},{"ruleId":"74","severity":1,"message":"83","line":35,"column":14,"nodeType":"84","endLine":41,"endColumn":4},{"ruleId":"74","severity":1,"message":"85","line":41,"column":6,"nodeType":"76","endLine":41,"endColumn":13,"suggestions":"86"},{"ruleId":"78","severity":1,"message":"79","line":10,"column":7,"nodeType":"80","endLine":10,"endColumn":55},{"ruleId":"70","severity":1,"message":"87","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":26},{"ruleId":"70","severity":1,"message":"87","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":26},{"ruleId":"70","severity":1,"message":"88","line":6,"column":10,"nodeType":"72","messageId":"73","endLine":6,"endColumn":39},{"ruleId":"70","severity":1,"message":"89","line":3,"column":8,"nodeType":"72","messageId":"73","endLine":3,"endColumn":21},{"ruleId":"70","severity":1,"message":"90","line":24,"column":13,"nodeType":"72","messageId":"73","endLine":24,"endColumn":27},{"ruleId":"70","severity":1,"message":"91","line":42,"column":13,"nodeType":"72","messageId":"73","endLine":42,"endColumn":27},{"ruleId":"74","severity":1,"message":"83","line":75,"column":16,"nodeType":"84","endLine":78,"endColumn":6},{"ruleId":"74","severity":1,"message":"92","line":78,"column":8,"nodeType":"76","endLine":78,"endColumn":15,"suggestions":"93"},{"ruleId":"78","severity":1,"message":"79","line":84,"column":21,"nodeType":"80","endLine":84,"endColumn":129},{"ruleId":"78","severity":1,"message":"79","line":8,"column":13,"nodeType":"80","endLine":8,"endColumn":67},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchPokemon'. Either include it or remove the dependency array.","ArrayExpression",["96"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'computeHeadingLevel' is defined but never used.","'data' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'fetchPokemons'. Either include it or remove the dependency array.",["97"],"'useEffect' is defined but never used.","'findRenderedComponentWithType' is defined but never used.","'loadingscreen' is defined but never used.","'firstEvolution' is assigned a value but never used.","'thirdEvolution' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchPokemonDetails'. Either include it or remove the dependency array.",["98"],"no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},"Update the dependencies array to be: [fetchPokemon]",{"range":"105","text":"106"},"Update the dependencies array to be: [fetchPokemons, props]",{"range":"107","text":"108"},"Update the dependencies array to be: [fetchPokemonDetails, props]",{"range":"109","text":"110"},[711,713],"[fetchPokemon]",[1154,1161],"[fetchPokemons, props]",[2539,2546],"[fetchPokemonDetails, props]"]