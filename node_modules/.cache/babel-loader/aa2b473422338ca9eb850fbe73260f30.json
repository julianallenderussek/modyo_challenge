{"ast":null,"code":"var _jsxFileName = \"/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/screens/PokedexScreen.js\",\n    _s = $RefreshSig$();\n\nimport { computeHeadingLevel } from '@testing-library/dom';\nimport React, { useState, useEffect } from 'react';\nimport Pokemon from '../components/Pokemon';\nimport './styles.css';\nimport LoadingScreen from '../components/LodingScreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PokedexScreen(props) {\n  _s();\n\n  console.log('RUNNING');\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState();\n  const [pokemonList, setPokemonList] = useState();\n  const [error, setError] = useState(false);\n  const {\n    setPreviousUrl,\n    setNextUrl\n  } = props;\n\n  const fetchPokemons = async url => {\n    try {\n      console.log(url, 'PROPS');\n      const response = await fetch(url);\n      const data = await response.json();\n      setData(data);\n      console.log('Data:', data);\n      setPreviousUrl(data.previous);\n      setNextUrl(data.next);\n      setPokemonList(data.results);\n      setLoading(false);\n    } catch {\n      setError('Could not retrive any data');\n      setLoading(false);\n      console.log('Error:', error);\n    }\n  };\n\n  useEffect(async () => {\n    setLoading(true);\n    const {\n      url\n    } = props;\n    console.log('URL FROM USEFFECT', url);\n    await fetchPokemons(url);\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-background-screen\",\n    children: loading ? /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-list-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pokemon-list-wrapper\",\n        children: pokemonList.map(pokemon => {\n          return /*#__PURE__*/_jsxDEV(Pokemon, {\n            name: pokemon.name,\n            url: pokemon.url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 23\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PokedexScreen, \"4kZCwdStwGji+az5JsCbaxbS9aU=\");\n\n_c = PokedexScreen;\nexport default PokedexScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokedexScreen\");","map":{"version":3,"sources":["/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/screens/PokedexScreen.js"],"names":["computeHeadingLevel","React","useState","useEffect","Pokemon","LoadingScreen","PokedexScreen","props","console","log","loading","setLoading","data","setData","pokemonList","setPokemonList","error","setError","setPreviousUrl","setNextUrl","fetchPokemons","url","response","fetch","json","previous","next","results","map","pokemon","name"],"mappings":";;;AAAA,SAASA,mBAAT,QAAoC,sBAApC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAO,cAAP;AACA,OAAOC,aAAP,MAA0B,4BAA1B;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAE5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,EAAhC;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,EAA9C;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM;AAAEgB,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAAiCZ,KAAvC;;AAEA,QAAMa,aAAa,GAAG,MAAOC,GAAP,IAAgB;AAEpC,QAAI;AACFb,MAAAA,OAAO,CAACC,GAAR,CAAYY,GAAZ,EAAiB,OAAjB;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,YAAMT,IAAI,GAAG,MAAMU,QAAQ,CAACE,IAAT,EAAnB;AACAX,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBG,IAArB;AACAM,MAAAA,cAAc,CAACN,IAAI,CAACa,QAAN,CAAd;AACAN,MAAAA,UAAU,CAACP,IAAI,CAACc,IAAN,CAAV;AACAX,MAAAA,cAAc,CAACH,IAAI,CAACe,OAAN,CAAd;AACAhB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAVD,CAUE,MAAM;AACNM,MAAAA,QAAQ,CAAC,4BAAD,CAAR;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBO,KAAtB;AACD;AACF,GAjBD;;AAmBAb,EAAAA,SAAS,CAAE,YAAW;AACpBQ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAM;AAAEU,MAAAA;AAAF,QAAUd,KAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCY,GAAjC;AACA,UAAMD,aAAa,CAACC,GAAD,CAAnB;AAED,GANQ,EAMN,CAACd,KAAD,CANM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,cACGG,OAAO,gBAAG,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBACN;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,kBACGI,WAAW,CAACc,GAAZ,CAAiBC,OAAD,IAAa;AAC5B,8BAAQ,QAAC,OAAD;AAAS,YAAA,IAAI,EAAEA,OAAO,CAACC,IAAvB;AAA6B,YAAA,GAAG,EAAED,OAAO,CAACR;AAA1C;AAAA;AAAA;AAAA;AAAA,kBAAR;AACD,SAFA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAjDQf,a;;KAAAA,a;AAmDT,eAAeA,aAAf","sourcesContent":["import { computeHeadingLevel } from '@testing-library/dom';\nimport React, { useState, useEffect} from 'react'\nimport Pokemon from '../components/Pokemon'\nimport './styles.css'\nimport LoadingScreen from '../components/LodingScreen'\n\nfunction PokedexScreen(props) {\n\n  console.log('RUNNING');\n  const [loading, setLoading] = useState(true)\n  const [data, setData] = useState();\n  const [pokemonList, setPokemonList] = useState()\n  const [error, setError] = useState(false)\n  const { setPreviousUrl, setNextUrl } = props\n  \n  const fetchPokemons = async (url) =>  {\n    \n    try {\n      console.log(url, 'PROPS')\n      const response = await fetch(url);\n      const data = await response.json();\n      setData(data)\n      console.log('Data:', data)\n      setPreviousUrl(data.previous)\n      setNextUrl(data.next)\n      setPokemonList(data.results)\n      setLoading(false);\n    } catch {\n      setError('Could not retrive any data')\n      setLoading(false);\n      console.log('Error:', error)\n    }\n  }\n\n  useEffect( async() => {\n    setLoading(true)\n    const { url } = props\n    console.log('URL FROM USEFFECT', url)\n    await fetchPokemons(url)\n    \n  }, [props])\n\n  return (\n    <div className=\"main-background-screen\">\n      {loading ? <LoadingScreen/> : \n        <div className=\"main-list-wrapper\">\n          <div className=\"pokemon-list-wrapper\">\n            {pokemonList.map((pokemon) => {\n              return (<Pokemon name={pokemon.name} url={pokemon.url} />)\n            })}\n          </div>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default PokedexScreen\n"]},"metadata":{},"sourceType":"module"}