{"ast":null,"code":"var _jsxFileName = \"/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/components/Pokemon.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport \"./Pokemon.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Pokemon = props => {\n  _s();\n\n  const [pokemon, setPokemon] = useState();\n  const [loading, setLoading] = useState(true);\n  const [types, setTypes] = useState();\n  const [abilities, setAbilities] = useState();\n  const [pokemonId, setPokemonId] = useState(initialState);\n\n  const fetchPokemon = async () => {\n    const url = props.url;\n    const response = await fetch(url);\n    const data = await response.json();\n    setPokemon(data);\n    console.log(data);\n    setTypes(data.types);\n    setAbilities(data.abilities);\n    setPokemonId(data.id);\n    console.log(\"ID\", data.id);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchPokemon();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading Pokemon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(Link, {\n      to: `/pokemon/`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pokemon-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"pokemon-name\",\n          children: [\"Name: \", pokemon.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"pokemon-weight\",\n          children: [\"Weight: \", pokemon.weight]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pokemon-abilities\",\n          children: abilities.map((data, i) => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: data.ability.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pokemon-types\",\n          children: types.map((data, i) => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: data.type.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 20\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Pokemon, \"igA3DSXzEhq1q+W0HWx1UqNm5/k=\");\n\n_c = Pokemon;\nexport default Pokemon;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokemon\");","map":{"version":3,"sources":["/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/components/Pokemon.js"],"names":["React","useEffect","useState","Link","Pokemon","props","pokemon","setPokemon","loading","setLoading","types","setTypes","abilities","setAbilities","pokemonId","setPokemonId","initialState","fetchPokemon","url","response","fetch","data","json","console","log","id","name","weight","map","i","ability","type"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,eAAP;;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,EAAtC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,EAAlC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,EAA1C;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAACc,YAAD,CAA1C;;AAEA,QAAMC,YAAY,GAAG,YAAY;AAC/B,UAAMC,GAAG,GAAGb,KAAK,CAACa,GAAlB;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAf,IAAAA,UAAU,CAACc,IAAD,CAAV;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAV,IAAAA,QAAQ,CAACU,IAAI,CAACX,KAAN,CAAR;AACAG,IAAAA,YAAY,CAACQ,IAAI,CAACT,SAAN,CAAZ;AACAG,IAAAA,YAAY,CAACM,IAAI,CAACI,EAAN,CAAZ;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBH,IAAI,CAACI,EAAvB;AACAhB,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAXD;;AAaAR,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,cACIT,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,gBAET,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,WAAX;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCAEI;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA,+BAAoCF,OAAO,CAACoB,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAI,UAAA,SAAS,EAAC,gBAAd;AAAA,iCAAwCpB,OAAO,CAACqB,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAIE;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,oBACKf,SAAS,CAACgB,GAAV,CAAc,CAACP,IAAD,EAAOQ,CAAP,KAAa;AAC1B,gCAAO;AAAA,wBAAIR,IAAI,CAACS,OAAL,CAAaJ;AAAjB;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,WAFA;AADL;AAAA;AAAA;AAAA;AAAA,gBAJF,eAUE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,oBACKhB,KAAK,CAACkB,GAAN,CAAU,CAACP,IAAD,EAAOQ,CAAP,KAAa;AACxB,gCAAO;AAAA,wBAAIR,IAAI,CAACU,IAAL,CAAUL;AAAd;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,WAFE;AADL;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAHF,mBADF;AA0BD,CAlDD;;GAAMtB,O;;KAAAA,O;AAoDN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport \"./Pokemon.css\"\n\nconst Pokemon = (props) => {\n  const [pokemon, setPokemon] = useState();\n  const [loading, setLoading] = useState(true);\n  const [types, setTypes] = useState();\n  const [abilities, setAbilities] = useState();\n  const [pokemonId, setPokemonId] = useState(initialState)\n\n  const fetchPokemon = async () => {\n    const url = props.url\n    const response = await fetch(url)\n    const data = await response.json()\n    setPokemon(data)\n    console.log(data)\n    setTypes(data.types)\n    setAbilities(data.abilities)\n    setPokemonId(data.id)\n    console.log(\"ID\", data.id)\n    setLoading(false)\n  }\n\n  useEffect(() => {\n    fetchPokemon()\n  }, [])\n\n  return (\n    <>\n      { loading ? <div>Loading Pokemon</div> : \n      \n      <Link to={`/pokemon/`}>\n      <div className=\"pokemon-wrapper\">\n          \n          <h1 className=\"pokemon-name\">Name: {pokemon.name}</h1>\n          <h1 className=\"pokemon-weight\">Weight: {pokemon.weight}</h1>\n        <div className=\"pokemon-abilities\">\n            {abilities.map((data, i) => {\n              return <p>{data.ability.name}</p>\n            })\n          }\n        </div>\n        <div className=\"pokemon-types\">\n            {types.map((data, i) => {\n            return <p>{data.type.name}</p>\n          })\n        }\n        </div>\n      </div>\n        </Link>\n      }\n    </>\n  )\n}\n\nexport default Pokemon\n"]},"metadata":{},"sourceType":"module"}