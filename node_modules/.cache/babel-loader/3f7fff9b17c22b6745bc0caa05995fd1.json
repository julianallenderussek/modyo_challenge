{"ast":null,"code":"var _jsxFileName = \"/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/screens/PokedexScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Pokemon from '../components/Pokemon';\nimport PokeDex from '../components/Pokedex';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PokedexScreen(props) {\n  _s();\n\n  console.log(props);\n  const {\n    url\n  } = props;\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState();\n  const [pokemonList, setPokemonList] = useState();\n  const [error, setError] = useState(false);\n  const {\n    setPreviousUrl,\n    setNextUrl\n  } = props;\n\n  const fetchPokemons = async () => {\n    try {\n      console.log(props.url, 'GUACAMOLE');\n      const url = props.url;\n      console.log(url, 'PROPS');\n      const response = await fetch(url);\n      const data = await response.json();\n      setData(data);\n      console.log('Data:', data);\n      setPreviousUrl(data.previous);\n      setNextUrl(data.next);\n      setPokemonList(data.results);\n      setLoading(false);\n    } catch {\n      setError('Could not retrive any data');\n      setLoading(false);\n      console.log('Error:', error);\n    }\n  };\n\n  useEffect(async () => {\n    await fetchPokemons();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-background\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"...Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pokemon-list-wrapper\",\n        children: pokemonList.map(pokemon => {\n          return /*#__PURE__*/_jsxDEV(Pokemon, {\n            name: pokemon.name,\n            url: pokemon.url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 23\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PokedexScreen, \"4kZCwdStwGji+az5JsCbaxbS9aU=\");\n\n_c = PokedexScreen;\nexport default PokedexScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokedexScreen\");","map":{"version":3,"sources":["/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/screens/PokedexScreen.js"],"names":["React","useState","useEffect","Link","Pokemon","PokeDex","PokedexScreen","props","console","log","url","loading","setLoading","data","setData","pokemonList","setPokemonList","error","setError","setPreviousUrl","setNextUrl","fetchPokemons","response","fetch","json","previous","next","results","map","pokemon","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAO,cAAP;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAE5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,QAAM;AAAEG,IAAAA;AAAF,MAAUH,KAAhB;AAEA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,EAAhC;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,EAA9C;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM;AAAEkB,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAAiCb,KAAvC;;AACA,QAAMc,aAAa,GAAG,YAAa;AAEjC,QAAI;AACFb,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,GAAlB,EAAuB,WAAvB;AACA,YAAMA,GAAG,GAAGH,KAAK,CAACG,GAAlB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ,EAAiB,OAAjB;AACA,YAAMY,QAAQ,GAAG,MAAMC,KAAK,CAACb,GAAD,CAA5B;AACA,YAAMG,IAAI,GAAG,MAAMS,QAAQ,CAACE,IAAT,EAAnB;AACAV,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBI,IAArB;AACAM,MAAAA,cAAc,CAACN,IAAI,CAACY,QAAN,CAAd;AACAL,MAAAA,UAAU,CAACP,IAAI,CAACa,IAAN,CAAV;AACAV,MAAAA,cAAc,CAACH,IAAI,CAACc,OAAN,CAAd;AACAf,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAZD,CAYE,MAAM;AACNM,MAAAA,QAAQ,CAAC,4BAAD,CAAR;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBQ,KAAtB;AACD;AACF,GAnBD;;AAqBAf,EAAAA,SAAS,CAAE,YAAW;AACpB,UAAMmB,aAAa,EAAnB;AAED,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,cACGV,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,gBACN;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,kBACGI,WAAW,CAACa,GAAZ,CAAiBC,OAAD,IAAa;AAC5B,8BAAQ,QAAC,OAAD;AAAS,YAAA,IAAI,EAAEA,OAAO,CAACC,IAAvB;AAA6B,YAAA,GAAG,EAAED,OAAO,CAACnB;AAA1C;AAAA;AAAA;AAAA;AAAA,kBAAR;AACD,SAFA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAlDQJ,a;;KAAAA,a;AAoDT,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom';\nimport Pokemon from '../components/Pokemon'\nimport PokeDex from '../components/Pokedex'\nimport './styles.css'\n\nfunction PokedexScreen(props) {\n  \n  console.log(props)\n\n  const { url } = props\n\n  const [loading, setLoading] = useState(true)\n  const [data, setData] = useState();\n  const [pokemonList, setPokemonList] = useState()\n  const [error, setError] = useState(false)\n  const { setPreviousUrl, setNextUrl } = props\n  const fetchPokemons = async () =>  {\n    \n    try {\n      console.log(props.url, 'GUACAMOLE')\n      const url = props.url\n      console.log(url, 'PROPS')\n      const response = await fetch(url);\n      const data = await response.json();\n      setData(data)\n      console.log('Data:', data)\n      setPreviousUrl(data.previous)\n      setNextUrl(data.next)\n      setPokemonList(data.results)\n      setLoading(false);\n    } catch {\n      setError('Could not retrive any data')\n      setLoading(false);\n      console.log('Error:', error)\n    }\n  }\n\n  useEffect( async() => {\n    await fetchPokemons()\n    \n  }, [])\n\n  return (\n    <div className=\"main-background\">\n      {loading ? <h1>...Loading...</h1> : \n        <div>\n          <div className=\"pokemon-list-wrapper\">\n            {pokemonList.map((pokemon) => {\n              return (<Pokemon name={pokemon.name} url={pokemon.url} />)\n            })}\n          </div>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default PokedexScreen\n"]},"metadata":{},"sourceType":"module"}