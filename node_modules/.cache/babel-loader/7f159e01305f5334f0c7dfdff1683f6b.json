{"ast":null,"code":"var _jsxFileName = \"/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/screens/PokedexScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Pokemon from '../components/Pokemon';\nimport PokeDex from '../components/Pokedex';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PokedexScreen(props) {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState();\n  const [pokemonList, setPokemonList] = useState();\n  const [error, setError] = useState(false);\n\n  const fetchPokemons = async props => {\n    try {\n      const url = `https://pokeapi.co/api/v2/pokemon?offset=${props.offset.toString()}&limit=20`;\n      console.log(url);\n      const response = await fetch(url);\n      const data = await response.json();\n      setData(data);\n      console.log('Data:', data);\n      setPokemonList(data.results);\n      setLoading(false);\n    } catch {\n      setError('Could not retrive any data');\n      setLoading(false);\n      console.log('Error:', error);\n    }\n  };\n\n  useEffect(async () => {\n    await fetchPokemons();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-background\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"...Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PokedexScreen, \"4kZCwdStwGji+az5JsCbaxbS9aU=\");\n\n_c = PokedexScreen;\nexport default PokedexScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokedexScreen\");","map":{"version":3,"sources":["/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/screens/PokedexScreen.js"],"names":["React","useState","useEffect","Link","Pokemon","PokeDex","PokedexScreen","props","loading","setLoading","data","setData","pokemonList","setPokemonList","error","setError","fetchPokemons","url","offset","toString","console","log","response","fetch","json","results"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAO,cAAP;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC5B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,EAAhC;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,EAA9C;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMe,aAAa,GAAG,MAAOT,KAAP,IAAkB;AAEtC,QAAI;AACF,YAAMU,GAAG,GAAI,4CAA2CV,KAAK,CAACW,MAAN,CAAaC,QAAb,EAAwB,WAAhF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACA,YAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACN,GAAD,CAA5B;AACA,YAAMP,IAAI,GAAG,MAAMY,QAAQ,CAACE,IAAT,EAAnB;AACAb,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBX,IAArB;AACAG,MAAAA,cAAc,CAACH,IAAI,CAACe,OAAN,CAAd;AACAhB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KATD,CASE,MAAM;AACNM,MAAAA,QAAQ,CAAC,4BAAD,CAAR;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBP,KAAtB;AACD;AACF,GAhBD;;AAkBAZ,EAAAA,SAAS,CAAE,YAAW;AACpB,UAAMc,aAAa,EAAnB;AAED,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,cACGR,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,gBACN;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GA1CQF,a;;KAAAA,a;AA4CT,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom';\nimport Pokemon from '../components/Pokemon'\nimport PokeDex from '../components/Pokedex'\nimport './styles.css'\n\nfunction PokedexScreen(props) {\n  const [loading, setLoading] = useState(true)\n  const [data, setData] = useState();\n  const [pokemonList, setPokemonList] = useState()\n  const [error, setError] = useState(false)\n\n  const fetchPokemons = async (props) =>  {\n\n    try {\n      const url = `https://pokeapi.co/api/v2/pokemon?offset=${props.offset.toString()}&limit=20`\n      console.log(url)\n      const response = await fetch(url);\n      const data = await response.json();\n      setData(data)\n      console.log('Data:', data)\n      setPokemonList(data.results)\n      setLoading(false);\n    } catch {\n      setError('Could not retrive any data')\n      setLoading(false);\n      console.log('Error:', error)\n    }\n  }\n\n  useEffect( async() => {\n    await fetchPokemons()\n    \n  }, [])\n\n  return (\n    <div className=\"main-background\">\n      {loading ? <h1>...Loading...</h1> : \n        <div>\n          {/* <div className=\"pokemon-list-wrapper\">\n            {pokemonList.map((pokemon) => {\n              return (<Pokemon name={pokemon.name} url={pokemon.url} />)\n            })}\n          </div> */}\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default PokedexScreen\n"]},"metadata":{},"sourceType":"module"}