{"ast":null,"code":"var _jsxFileName = \"/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/screens/SinglePokemonScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './SinglePokemonScreen.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SinglePokemonScreen = props => {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [pokemonData, setPokemonData] = useState(); // const [evolutionsData, setEvolutionsData] = useState()\n\n  const [evolutionsArr, setEvolutionsArr] = useState();\n  const pokemonId = props.id;\n\n  const getEvolutions = async data => {\n    let arr = [];\n    let firstEvolution = data.chain.species.name;\n    let secondEvolution = data.chain.evolves_to[0].species.name;\n    let thirdEvolution = data.chain.evolves_to[0].evolves_to[0].species.name;\n    arr.push(firstEvolution);\n    arr.push(secondEvolution);\n    arr.push(thirdEvolution);\n    console.log(arr);\n    await setEvolutionsArr(arr);\n    console.log(evolutionsArr);\n  };\n\n  const fetchEvolutionChain = async evolutionUrl => {\n    const response = await fetch(evolutionUrl);\n    const data = await response.json(); // console.log(data, 'Evolution Data')\n    // console.log(data.chain.evolves_to[0].species.name, 'Evolution Data')\n    // console.log(data.chain.evolves_to[0].evolves_to[0].species.name, 'Evolution Data')\n    // setEvolutionsData(data.chain.evolves_to)\n\n    await getEvolutions(data);\n    setLoading(false);\n  };\n\n  const fetchPokemonDetails = async () => {\n    const url = `https://pokeapi.co/api/v2/pokemon/${pokemonId}/`;\n    const response = await fetch(url);\n    const data = await response.json();\n    const response2 = await fetch(`https://pokeapi.co/api/v2/pokemon-species/${pokemonId}`);\n    const data2 = await response2.json();\n    console.log(data2.evolution_chain.url);\n    fetchEvolutionChain(data2.evolution_chain.url);\n    setPokemonData(data);\n  };\n\n  useEffect(async () => {\n    setLoading(true);\n    fetchPokemonDetails();\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-wrapper-single-pokemon\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"...Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pokemon-details-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"pokemon-image-single-pokemon\",\n        src: `${pokemonData.sprites.other.dream_world.front_default}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"pokemon-details-name\",\n          children: [\"Name: \", pokemonData.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"pokemon-details-name\",\n          children: [\"Weight: \", pokemonData.weight]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pokemon-details-abilities\",\n          children: pokemonData.abilities.map((data, i) => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Ability \", i + 1, \": \", data.ability.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pokemon-details-types\",\n          children: pokemonData.types.map((data, i) => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Type \", i + 1, \": \", data.type.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pokemon-details-types\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Evolutions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }, this), evolutionsArr.map((evolution, i) => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Level: \", i + 1, \" Name: \", evolution]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 40\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SinglePokemonScreen, \"0bZFzmn8fjQbDUm030WBrbNrROk=\");\n\n_c = SinglePokemonScreen;\nexport default SinglePokemonScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePokemonScreen\");","map":{"version":3,"sources":["/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/screens/SinglePokemonScreen.js"],"names":["React","useState","useEffect","SinglePokemonScreen","props","loading","setLoading","pokemonData","setPokemonData","evolutionsArr","setEvolutionsArr","pokemonId","id","getEvolutions","data","arr","firstEvolution","chain","species","name","secondEvolution","evolves_to","thirdEvolution","push","console","log","fetchEvolutionChain","evolutionUrl","response","fetch","json","fetchPokemonDetails","url","response2","data2","evolution_chain","sprites","other","dream_world","front_default","weight","abilities","map","i","ability","types","type","evolution"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './SinglePokemonScreen.css'\n\nconst SinglePokemonScreen = (props) => {\n    \n    const [loading, setLoading] = useState(true)\n    const [pokemonData, setPokemonData] = useState()\n    // const [evolutionsData, setEvolutionsData] = useState()\n    const [evolutionsArr, setEvolutionsArr] = useState()\n    const pokemonId = props.id \n\n    const getEvolutions = async (data) => {\n        let arr = []\n        let firstEvolution = data.chain.species.name\n        let secondEvolution = data.chain.evolves_to[0].species.name\n        let thirdEvolution = data.chain.evolves_to[0].evolves_to[0].species.name\n        arr.push(firstEvolution)\n        arr.push(secondEvolution)\n        arr.push(thirdEvolution)\n        console.log(arr)\n        await setEvolutionsArr(arr)\n        console.log(evolutionsArr);\n        \n        \n    }\n\n    const fetchEvolutionChain = async (evolutionUrl) => {\n        const response = await fetch(evolutionUrl);\n        const data = await response.json();\n        // console.log(data, 'Evolution Data')\n        // console.log(data.chain.evolves_to[0].species.name, 'Evolution Data')\n        // console.log(data.chain.evolves_to[0].evolves_to[0].species.name, 'Evolution Data')\n        // setEvolutionsData(data.chain.evolves_to)\n        await getEvolutions(data)\n        setLoading(false)\n    }\n    \n    const fetchPokemonDetails = async () => {\n        const url = `https://pokeapi.co/api/v2/pokemon/${pokemonId}/`\n        const response = await fetch(url);\n        const data = await response.json();\n        const response2 = await fetch(`https://pokeapi.co/api/v2/pokemon-species/${pokemonId}`)\n        const data2 = await response2.json()\n        console.log(data2.evolution_chain.url);\n        fetchEvolutionChain(data2.evolution_chain.url)\n        setPokemonData(data)\n        \n    }\n\n    useEffect( async() => {\n        setLoading(true)\n        fetchPokemonDetails()\n    }, [props])\n\n    return (\n        <div className=\"main-wrapper-single-pokemon\">\n            {loading ? <div>...Loading</div> : (\n                <div className=\"pokemon-details-wrapper\">\n                    <img className=\"pokemon-image-single-pokemon\"src={`${pokemonData.sprites.other.dream_world.front_default}`}></img>\n                    <div>\n                        <p className=\"pokemon-details-name\">Name: {pokemonData.name}</p>\n                        <p className=\"pokemon-details-name\">Weight: {pokemonData.weight}</p>\n                        <div className=\"pokemon-details-abilities\">\n                                {pokemonData.abilities.map((data, i) => {\n                                return <p>Ability {i + 1}: {data.ability.name}</p>\n                                })\n                            }\n                        </div>\n                        <div className=\"pokemon-details-types\">\n                                {pokemonData.types.map((data, i) => {\n                                return <p>Type {i + 1}: {data.type.name}</p>\n                                })\n                            }\n                        </div>\n                        <div className=\"pokemon-details-types\">\n                                <h1>Evolutions:</h1>\n                                {evolutionsArr.map((evolution, i) => {\n                                return <p>Level: {i+1} Name: {evolution}</p>\n                                })\n                            }\n                        </div>\n                    </div>\n                    \n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default SinglePokemonScreen\n"]},"metadata":{},"sourceType":"module"}