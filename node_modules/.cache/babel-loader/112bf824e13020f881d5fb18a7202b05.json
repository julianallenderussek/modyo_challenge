{"ast":null,"code":"var _jsxFileName = \"/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/components/Pokemon.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport \"./Pokemon.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Pokemon = props => {\n  _s();\n\n  const [pokemon, setPokemon] = useState();\n  const [loading, setLoading] = useState(true);\n  const [types, setTypes] = useState();\n  const [abilities, setAbilities] = useState();\n  const [pokemonId, setPokemonId] = useState();\n\n  const fetchPokemon = async () => {\n    const url = props.url;\n    const response = await fetch(url);\n    const data = await response.json();\n    setPokemon(data);\n    setTypes(data.types);\n    setAbilities(data.abilities);\n    setPokemonId(data.id);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    fetchPokemon();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading Pokemon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(Link, {\n      className: \"link-pokemon\",\n      to: `/pokemon/${pokemonId}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pokemon-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"small-p\\xF3kemon-avatar\",\n          src: pokemon.sprites.front_default\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"pokemon-name\",\n          children: pokemon.name.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pokemon-weight\",\n            children: [\"Id: \", pokemon.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pokemon-weight\",\n            children: [\"Weight: \", pokemon.weight]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"abilities-main-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Abilities\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pokemon-abilities\",\n            children: abilities.map((data, i) => {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                children: data.ability.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 24\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"types-main-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Types\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pokemon-types\",\n            children: types.map((data, i) => {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                children: data.type.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 22\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Pokemon, \"m7h0RT3Cqj1fMNZJF9605qPpSDs=\");\n\n_c = Pokemon;\nexport default Pokemon;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokemon\");","map":{"version":3,"sources":["/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/components/Pokemon.js"],"names":["React","useEffect","useState","Link","Pokemon","props","pokemon","setPokemon","loading","setLoading","types","setTypes","abilities","setAbilities","pokemonId","setPokemonId","fetchPokemon","url","response","fetch","data","json","id","sprites","front_default","name","toUpperCase","weight","map","i","ability","type"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport \"./Pokemon.css\"\n\nconst Pokemon = (props) => {\n  const [pokemon, setPokemon] = useState();\n  const [loading, setLoading] = useState(true);\n  const [types, setTypes] = useState();\n  const [abilities, setAbilities] = useState();\n  const [pokemonId, setPokemonId] = useState()\n\n  const fetchPokemon = async () => {\n    const url = props.url\n    const response = await fetch(url)\n    const data = await response.json()\n    setPokemon(data)\n    setTypes(data.types)\n    setAbilities(data.abilities)\n    setPokemonId(data.id)\n    setLoading(false)\n  }\n\n  useEffect(() => {\n    setLoading(true)\n    fetchPokemon()\n  }, [])\n\n  return (\n    <>\n      { loading ? <div>Loading Pokemon</div> : \n      \n      <Link className=\"link-pokemon\" to={`/pokemon/${pokemonId}`}>\n      <div className=\"pokemon-wrapper\">\n          <img className=\"small-pÃ³kemon-avatar\" src={pokemon.sprites.front_default}></img>\n          \n          <h1 className=\"pokemon-name\">{pokemon.name.toUpperCase()}</h1>\n          <div className=\"stats-div\">\n            <p className=\"pokemon-weight\">Id: {pokemon.id}</p>\n            <p className=\"pokemon-weight\">Weight: {pokemon.weight}</p>\n          </div>  \n        <div className=\"abilities-main-wrapper\">\n          <h4>Abilities</h4>\n          <div className=\"pokemon-abilities\">\n              {abilities.map((data, i) => {\n                return <p>{data.ability.name}</p>\n              })\n            }\n          </div>\n        </div>\n        <div className=\"types-main-wrapper\">\n        <h4>Types</h4>\n          <div className=\"pokemon-types\">\n              {types.map((data, i) => {\n              return <p>{data.type.name}</p>\n            })\n          }\n          </div>\n        </div>\n      </div>\n        </Link>\n      }\n    </>\n  )\n}\n\nexport default Pokemon\n"]},"metadata":{},"sourceType":"module"}