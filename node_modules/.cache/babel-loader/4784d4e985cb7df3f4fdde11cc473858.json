{"ast":null,"code":"var _jsxFileName = \"/Users/julianallenderussek/Desktop/CODING/challenges/modyo-challenge/src/pages/PokedexScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PokedexScreen() {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState();\n  const [pokemonList, setPokemonList] = useState();\n  const [error, setError] = useState(false);\n\n  const fetchPokemons = async () => {\n    try {\n      const url = 'https://pokeapi.co/api/v2/pokemon?offset=20&limit=20';\n      const response = await fetch(url);\n      const data = await response.json();\n      setData(data);\n      console.log('Data:', data);\n      setPokemonList(data.results);\n      setLoading(false);\n    } catch {\n      setError('Could not retrive any data');\n      setLoading(false);\n      console.log('Error:', error);\n    }\n  };\n\n  useEffect(async () => {\n    await fetchPokemons();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"...Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pokemon-list-wrapper\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PokedexScreen, \"4kZCwdStwGji+az5JsCbaxbS9aU=\");\n\n_c = PokedexScreen;\nexport default PokedexScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokedexScreen\");","map":{"version":3,"sources":["/Users/julianallenderussek/Desktop/CODING/challenges/modyo-challenge/src/pages/PokedexScreen.js"],"names":["React","useState","useEffect","Link","PokedexScreen","loading","setLoading","data","setData","pokemonList","setPokemonList","error","setError","fetchPokemons","url","response","fetch","json","console","log","results"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AACvB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,EAAhC;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,EAA9C;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMY,aAAa,GAAG,YAAa;AACjC,QAAI;AACF,YAAMC,GAAG,GAAG,sDAAZ;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,YAAMP,IAAI,GAAG,MAAMQ,QAAQ,CAACE,IAAT,EAAnB;AACAT,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBZ,IAArB;AACAG,MAAAA,cAAc,CAACH,IAAI,CAACa,OAAN,CAAd;AACAd,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KARD,CAQE,MAAM;AACNM,MAAAA,QAAQ,CAAC,4BAAD,CAAR;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBR,KAAtB;AACD;AACF,GAdD;;AAgBAT,EAAAA,SAAS,CAAE,YAAW;AACpB,UAAMW,aAAa,EAAnB;AAED,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AAAA,cACGR,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,gBACN;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAtCQD,a;;KAAAA,a;AAwCT,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom';\n\nfunction PokedexScreen() {\n  const [loading, setLoading] = useState(true)\n  const [data, setData] = useState();\n  const [pokemonList, setPokemonList] = useState()\n  const [error, setError] = useState(false)\n  \n  const fetchPokemons = async () =>  {\n    try {\n      const url = 'https://pokeapi.co/api/v2/pokemon?offset=20&limit=20'\n      const response = await fetch(url);\n      const data = await response.json();\n      setData(data)\n      console.log('Data:', data)\n      setPokemonList(data.results)\n      setLoading(false);\n    } catch {\n      setError('Could not retrive any data')\n      setLoading(false);\n      console.log('Error:', error)\n    }\n  }\n\n  useEffect( async() => {\n    await fetchPokemons()\n    \n  }, [])\n\n  return (\n    <div>\n      {loading ? <h1>...Loading...</h1> : \n        <div>\n          <div className=\"pokemon-list-wrapper\">\n\n          </div>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default PokedexScreen\n"]},"metadata":{},"sourceType":"module"}