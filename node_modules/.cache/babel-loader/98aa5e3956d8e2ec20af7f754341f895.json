{"ast":null,"code":"var _jsxFileName = \"/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/pages/PokemonScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PokemonScreen = () => {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [pokemonData, setPokemonData] = useState();\n  let params = useParams();\n  const pokemonId = params.id;\n\n  const fetchPokemonDetails = async () => {\n    console.log('fetching Data');\n    const url = `https://pokeapi.co/api/v2/pokemon/${pokemonId}/`;\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log(data);\n    setPokemonData(data);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchPokemonDetails();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"...Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pokemon-details-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"pokemon-details-name\",\n        children: [\"Name: \", pokemonData.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"pokemon-details-name\",\n        children: [\"Abilities: \", pokemonData.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"pokemon-details-name\",\n        children: [\"Abilities: \", pokemonData.weight]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pokemon-details-abilities\",\n        children: pokemonData.abilities.map((data, i) => {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: data.ability.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pokemon-details-types\",\n        children: pokemonData.types.map((data, i) => {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: data.type.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PokemonScreen, \"hvN3W1sJiP76f+9Zp0vzM2fzeXk=\", false, function () {\n  return [useParams];\n});\n\n_c = PokemonScreen;\nexport default PokemonScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonScreen\");","map":{"version":3,"sources":["/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/pages/PokemonScreen.js"],"names":["React","useState","useEffect","useParams","PokemonScreen","loading","setLoading","pokemonData","setPokemonData","params","pokemonId","id","fetchPokemonDetails","console","log","url","response","fetch","data","json","name","weight","abilities","map","i","ability","types","type"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAGA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAExB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,EAA9C;AAEA,MAAIQ,MAAM,GAAGN,SAAS,EAAtB;AACA,QAAMO,SAAS,GAAGD,MAAM,CAACE,EAAzB;;AAEA,QAAMC,mBAAmB,GAAG,YAAY;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,UAAMC,GAAG,GAAI,qCAAoCL,SAAU,GAA3D;AACA,UAAMM,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACAV,IAAAA,cAAc,CAACU,IAAD,CAAd;AACAZ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GARD;;AAUAJ,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,mBAAmB;AACtB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA,cACKP,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,gBACJ;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,sBAAb;AAAA,6BAA2CE,WAAW,CAACa,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAC,sBAAb;AAAA,kCAAgDb,WAAW,CAACa,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAG,QAAA,SAAS,EAAC,sBAAb;AAAA,kCAAgDb,WAAW,CAACc,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA,kBACSd,WAAW,CAACe,SAAZ,CAAsBC,GAAtB,CAA0B,CAACL,IAAD,EAAOM,CAAP,KAAa;AACxC,8BAAO;AAAA,sBAAIN,IAAI,CAACO,OAAL,CAAaL;AAAjB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACC,SAFA;AADT;AAAA;AAAA;AAAA;AAAA,cAJJ,eAUI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,kBACSb,WAAW,CAACmB,KAAZ,CAAkBH,GAAlB,CAAsB,CAACL,IAAD,EAAOM,CAAP,KAAa;AACpC,8BAAO;AAAA,sBAAIN,IAAI,CAACS,IAAL,CAAUP;AAAd;AAAA;AAAA;AAAA;AAAA,kBAAP;AACC,SAFA;AADT;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CA9CD;;GAAMhB,a;UAKWD,S;;;KALXC,a;AAgDN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\n\n\nconst PokemonScreen = () => {\n    \n    const [loading, setLoading] = useState(true)\n    const [pokemonData, setPokemonData] = useState()\n\n    let params = useParams()\n    const pokemonId = params.id \n\n    const fetchPokemonDetails = async () => {\n        console.log('fetching Data');\n        const url = `https://pokeapi.co/api/v2/pokemon/${pokemonId}/`\n        const response = await fetch(url);\n        const data = await response.json();\n        console.log(data)\n        setPokemonData(data)\n        setLoading(false)\n    }\n\n    useEffect(() => {\n        fetchPokemonDetails()\n    }, [])\n\n    return (\n        <div>\n            {loading ? <div>...Loading</div> : (\n                <div className=\"pokemon-details-wrapper\">\n                    <p className=\"pokemon-details-name\">Name: {pokemonData.name}</p>\n                    <p className=\"pokemon-details-name\">Abilities: {pokemonData.name}</p>\n                    <p className=\"pokemon-details-name\">Abilities: {pokemonData.weight}</p>\n                    <div className=\"pokemon-details-abilities\">\n                            {pokemonData.abilities.map((data, i) => {\n                            return <p>{data.ability.name}</p>\n                            })\n                        }\n                    </div>\n                    <div className=\"pokemon-details-types\">\n                            {pokemonData.types.map((data, i) => {\n                            return <p>{data.type.name}</p>\n                            })\n                        }\n                    </div>\n                    \n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default PokemonScreen\n"]},"metadata":{},"sourceType":"module"}