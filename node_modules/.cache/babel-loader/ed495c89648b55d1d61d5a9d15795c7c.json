{"ast":null,"code":"var _jsxFileName = \"/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/components/Pokemon.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"./Pokemon.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Pokemon = props => {\n  _s();\n\n  const [pokemon, setPokemon] = useState();\n  const [loading, setLoading] = useState(true);\n  const [types, setTypes] = useState();\n  const [abilities, setAbilities] = useState();\n\n  const fetchPokemon = async () => {\n    const url = props.url;\n    const response = await fetch(url);\n    const data = await response.json();\n    setPokemon(data);\n    console.log(data.types);\n    setTypes(data.types);\n    setAbilities(data.abilities);\n    console.log('ABILITIES', data.abilities);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchPokemon();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading Pokemon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pokemon-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"pokemon-name\",\n        children: [\"Name: \", pokemon.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"pokemon-weight\",\n        children: [\"Weight: \", pokemon.weight]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pokemon-abilities\",\n        children: abilities.map((data, i) => {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: data.ability.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pokemon-types\",\n        children: types.map((data, i) => {\n          console.log(data);\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"hello\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 48\n    }, this)\n  }, void 0, false);\n};\n\n_s(Pokemon, \"AkexDDODGOaqnF9MYCwmfaMilY4=\");\n\n_c = Pokemon;\nexport default Pokemon;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokemon\");","map":{"version":3,"sources":["/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/components/Pokemon.js"],"names":["React","useEffect","useState","Pokemon","props","pokemon","setPokemon","loading","setLoading","types","setTypes","abilities","setAbilities","fetchPokemon","url","response","fetch","data","json","console","log","name","weight","map","i","ability"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,eAAP;;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,EAAtC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,EAAlC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,EAA1C;;AAEA,QAAMW,YAAY,GAAG,YAAY;AAC/B,UAAMC,GAAG,GAAGV,KAAK,CAACU,GAAlB;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAZ,IAAAA,UAAU,CAACW,IAAD,CAAV;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACR,KAAjB;AACAC,IAAAA,QAAQ,CAACO,IAAI,CAACR,KAAN,CAAR;AACAG,IAAAA,YAAY,CAACK,IAAI,CAACN,SAAN,CAAZ;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,IAAI,CAACN,SAA9B;AACAH,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAVD;;AAYAP,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,cACIN,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAgC;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACrC;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA,6BAAoCF,OAAO,CAACgB,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,cADqC,eAErC;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA,+BAAwChB,OAAO,CAACiB,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFqC,eAGvC;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,kBACKX,SAAS,CAACY,GAAV,CAAc,CAACN,IAAD,EAAOO,CAAP,KAAa;AAC5B,8BAAO;AAAA,sBAAIP,IAAI,CAACQ,OAAL,CAAaJ;AAAjB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACC,SAFA;AADL;AAAA;AAAA;AAAA;AAAA,cAHuC,eASvC;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBACKZ,KAAK,CAACc,GAAN,CAAU,CAACN,IAAD,EAAOO,CAAP,KAAa;AAAEL,UAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAC1B,8BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACC,SAFA;AADL;AAAA;AAAA;AAAA;AAAA,cATuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAD3C,mBADF;AAqBD,CA3CD;;GAAMd,O;;KAAAA,O;AA6CN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport \"./Pokemon.css\"\n\nconst Pokemon = (props) => {\n  const [pokemon, setPokemon] = useState();\n  const [loading, setLoading] = useState(true);\n  const [types, setTypes] = useState();\n  const [abilities, setAbilities] = useState();\n\n  const fetchPokemon = async () => {\n    const url = props.url\n    const response = await fetch(url)\n    const data = await response.json()\n    setPokemon(data)\n    console.log(data.types)\n    setTypes(data.types)\n    setAbilities(data.abilities)\n    console.log('ABILITIES', data.abilities)\n    setLoading(false)\n  }\n\n  useEffect(() => {\n    fetchPokemon()\n  }, [])\n\n  return (\n    <>\n      { loading ? <div>Loading Pokemon</div> : <div className=\"pokemon-wrapper\">\n          <h1 className=\"pokemon-name\">Name: {pokemon.name}</h1>\n          <h1 className=\"pokemon-weight\">Weight: {pokemon.weight}</h1>\n        <div className=\"pokemon-abilities\">\n            {abilities.map((data, i) => { \n            return <p>{data.ability.name}</p>\n            })\n          }\n        </div>\n        <div className=\"pokemon-types\">\n            {types.map((data, i) => { console.log(data)\n            return <p>hello</p>\n            })\n          }\n        </div>\n      </div>\n      }\n    </>\n  )\n}\n\nexport default Pokemon\n"]},"metadata":{},"sourceType":"module"}