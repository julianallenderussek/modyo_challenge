{"ast":null,"code":"var _jsxFileName = \"/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/screens/SinglePokemonScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './SinglePokemonScreen.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SinglePokemonScreen = props => {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [pokemonData, setPokemonData] = useState(); // const [evolutionsData, setEvolutionsData] = useState()\n\n  const [evolutionsArr, setEvolutionsArr] = useState();\n  const pokemonId = props.id;\n\n  const getEvolutions = async data => {\n    let arr = []; // Try and catch to destructure evolution chain. Adding true values to evolution array.\n\n    let firstEvolution;\n\n    try {\n      let firstEvolution = data.chain.species.name;\n      arr.push(firstEvolution);\n    } catch {\n      firstEvolution = \"\";\n    }\n\n    let secondEvolution;\n\n    try {\n      secondEvolution = data.chain.evolves_to[0].species.name;\n      arr.push(secondEvolution);\n    } catch {\n      secondEvolution = \"\";\n    }\n\n    let thirdEvolution;\n\n    try {\n      let thirdEvolution = data.chain.evolves_to[0].evolves_to[0].species.name;\n      arr.push(thirdEvolution);\n    } catch {\n      thirdEvolution = \"\";\n    }\n\n    console.log(arr);\n    await setEvolutionsArr(arr);\n    console.log(evolutionsArr);\n  };\n\n  const fetchEvolutionChain = async evolutionUrl => {\n    const response = await fetch(evolutionUrl);\n    const data = await response.json(); // console.log(data, 'Evolution Data')\n    // console.log(data.chain.evolves_to[0].species.name, 'Evolution Data')\n    // console.log(data.chain.evolves_to[0].evolves_to[0].species.name, 'Evolution Data')\n    // setEvolutionsData(data.chain.evolves_to)\n\n    await getEvolutions(data);\n    setLoading(false);\n  };\n\n  const fetchPokemonDetails = async () => {\n    const url = `https://pokeapi.co/api/v2/pokemon/${pokemonId}/`;\n    const response = await fetch(url);\n    const data = await response.json();\n    const response2 = await fetch(`https://pokeapi.co/api/v2/pokemon-species/${pokemonId}`);\n    const data2 = await response2.json();\n    console.log(data2.evolution_chain.url);\n    fetchEvolutionChain(data2.evolution_chain.url);\n    setPokemonData(data);\n  };\n\n  useEffect(async () => {\n    setLoading(true);\n    fetchPokemonDetails();\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-wrapper-single-pokemon\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"...Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pokemon-details-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"pokemon-image-single-pokemon\",\n        src: `${pokemonData.sprites.other.dream_world.front_default}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"pokemon-details-name\",\n          children: pokemonData.name.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"pokemon-details-name\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Weight:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 62\n          }, this), \" \", pokemonData.weight]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pokemon-details-abilities\",\n          children: pokemonData.abilities.map((data, i) => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"Ability \", i + 1, \": \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 44\n              }, this), \" \", data.ability.name.toUpperCase()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pokemon-details-types\",\n          children: pokemonData.types.map((data, i) => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"Ability \", i + 1, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 43\n              }, this), \"x \", data.type.name.toUpperCase()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pokemon-details-types\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Evolutions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 33\n          }, this), evolutionsArr.map((evolution, i) => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Level: \", i + 1, \" Name: \", evolution]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 40\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SinglePokemonScreen, \"0bZFzmn8fjQbDUm030WBrbNrROk=\");\n\n_c = SinglePokemonScreen;\nexport default SinglePokemonScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePokemonScreen\");","map":{"version":3,"sources":["/home/julianallende/Desktop/Coding/challenges/modyo_challenge/src/screens/SinglePokemonScreen.js"],"names":["React","useState","useEffect","SinglePokemonScreen","props","loading","setLoading","pokemonData","setPokemonData","evolutionsArr","setEvolutionsArr","pokemonId","id","getEvolutions","data","arr","firstEvolution","chain","species","name","push","secondEvolution","evolves_to","thirdEvolution","console","log","fetchEvolutionChain","evolutionUrl","response","fetch","json","fetchPokemonDetails","url","response2","data2","evolution_chain","sprites","other","dream_world","front_default","toUpperCase","weight","abilities","map","i","ability","types","type","evolution"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './SinglePokemonScreen.css'\n\nconst SinglePokemonScreen = (props) => {\n    \n    const [loading, setLoading] = useState(true)\n    const [pokemonData, setPokemonData] = useState()\n    // const [evolutionsData, setEvolutionsData] = useState()\n    const [evolutionsArr, setEvolutionsArr] = useState()\n    const pokemonId = props.id \n\n    const getEvolutions = async (data) => {\n        let arr = []\n        \n        // Try and catch to destructure evolution chain. Adding true values to evolution array.\n        let firstEvolution\n        try {\n            let firstEvolution = data.chain.species.name\n            arr.push(firstEvolution)\n        }\n        catch {\n            firstEvolution = \"\"\n        }\n        \n        let secondEvolution\n        try {\n            secondEvolution = data.chain.evolves_to[0].species.name\n            arr.push(secondEvolution)\n        }\n        catch {\n            secondEvolution = \"\"\n        }\n\n        let thirdEvolution\n        try {\n            let thirdEvolution = data.chain.evolves_to[0].evolves_to[0].species.name\n            arr.push(thirdEvolution)\n        }\n        catch {\n            thirdEvolution = \"\"\n        }\n        \n        console.log(arr)\n        await setEvolutionsArr(arr)\n        console.log(evolutionsArr);\n        \n        \n    }\n\n    const fetchEvolutionChain = async (evolutionUrl) => {\n        const response = await fetch(evolutionUrl);\n        const data = await response.json();\n        // console.log(data, 'Evolution Data')\n        // console.log(data.chain.evolves_to[0].species.name, 'Evolution Data')\n        // console.log(data.chain.evolves_to[0].evolves_to[0].species.name, 'Evolution Data')\n        // setEvolutionsData(data.chain.evolves_to)\n        await getEvolutions(data)\n        setLoading(false)\n    }\n    \n    const fetchPokemonDetails = async () => {\n        const url = `https://pokeapi.co/api/v2/pokemon/${pokemonId}/`\n        const response = await fetch(url);\n        const data = await response.json();\n        const response2 = await fetch(`https://pokeapi.co/api/v2/pokemon-species/${pokemonId}`)\n        const data2 = await response2.json()\n        console.log(data2.evolution_chain.url);\n        fetchEvolutionChain(data2.evolution_chain.url)\n        setPokemonData(data)\n        \n    }\n\n    useEffect( async() => {\n        setLoading(true)\n        fetchPokemonDetails()\n    }, [props])\n\n    return (\n        <div className=\"main-wrapper-single-pokemon\">\n            {loading ? <div>...Loading</div> : (\n                <div className=\"pokemon-details-wrapper\">\n                    <img className=\"pokemon-image-single-pokemon\"src={`${pokemonData.sprites.other.dream_world.front_default}`}></img>\n                    <div>\n                        <h1 className=\"pokemon-details-name\">{pokemonData.name.toUpperCase()}</h1>\n                        <p className=\"pokemon-details-name\"> <strong>Weight:</strong> {pokemonData.weight}</p>\n                        <div className=\"pokemon-details-abilities\">\n                                {pokemonData.abilities.map((data, i) => {\n                                return <p> <strong>Ability {i + 1}: </strong> {data.ability.name.toUpperCase()}</p>\n                                })\n                            }\n                        </div>\n                        <div className=\"pokemon-details-types\">\n                                {pokemonData.types.map((data, i) => {\n                                return <p><strong>Ability {i + 1}:</strong>x {data.type.name.toUpperCase()}</p>\n                                })\n                            }\n                        </div>\n                        <div className=\"pokemon-details-types\">\n                                <h1>Evolutions:</h1>\n                                {evolutionsArr.map((evolution, i) => {\n                                return <p>Level: {i+1} Name: {evolution}</p>\n                                })\n                            }\n                        </div>\n                    </div>\n                    \n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default SinglePokemonScreen\n"]},"metadata":{},"sourceType":"module"}